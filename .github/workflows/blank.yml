name: CI/CD for 3tier_app

on:
<<<<<<< HEAD
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      MONGO_URI: mongodb://localhost:27017/testdb
      JWT_SECRET: Dinesh
      PORT: 3001
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Run backend lint
        run: npx eslint .
        working-directory: ./backend
        continue-on-error: true

      - name: Run backend tests (if any)
        run: npm test || echo "No backend tests"
        working-directory: ./backend

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Run frontend lint
        run: npx eslint .
        working-directory: ./frontend
        continue-on-error: true

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Run frontend tests (if any)
        run: npm test || echo "No frontend tests"
        working-directory: ./frontend

# Optionally, add deploy jobs here
=======
  workflow_dispatch:

jobs:
  setup-ssh:
    runs-on: ubuntu-latest
    env:
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      EC2_URL: ${{ secrets.EC2_URL }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
    steps:
      - name: Setup SSH for EC2
        uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
        with:
          EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_URL: ${{ secrets.EC2_URL }}

      - name: Create a new file on the EC2 instance with "hello-world"
        run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "echo 'hello-world' >> new_file.txt"

      - name: Clone your Docker repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
          depth: 1
          branch: 'main'
          owner: 'Dinesh756'
          repository: 'Docker'

      - name: List files and save output
        run: |
          ls -lrt > new_file.txt
          cat new_file.txt
>>>>>>> 3527d8ecf2969aaf30ac6f3d61e73b69ebe5158e
